---
import { Album_Audio, Audios, isNotNull, and } from 'astro:db'
import { db, Album, eq } from 'astro:db'
import ModalBorradoAudio from './ModalBorradoAudio.astro';
import ModalEditarAudio from './ModalEditarAudio.astro';

const { idArtista } = Astro.props

const cancionesDuplicadas = await db.select()
                            .from(Album)
                            .leftJoin(Album_Audio, eq(Album.idAlbum, Album_Audio.idAlbum))
                            .leftJoin(Audios, eq(Album_Audio.idAudio, Audios.idAudio))
                            .where(and(
                                eq(Album.idArtista, idArtista), //Filtrar por artista
                                isNotNull(Audios.idAudio), //Filtrar por albumes vacios
                            ));

const canciones = cancionesDuplicadas.sort((a,b) => {
                        return a.Album.esSencillo == b.Album.esSencillo ? 
                                0 : 
                                    a.Album.esSencillo ?
                                    1 : 
                                    -1
                    }).filter((can, idx, array) => {
                        return !array.slice(0, idx).some(elem => elem.Audios.idAudio == can.Audios.idAudio)
                    })

---

<div class="w-full min-h-[88vh] flex justify-center items-center p-8">
    <div class="w-full sm:w-3/4 md:w-8/12 lg:w-6/12 rounded border border-black">
        <h2 class="text-center text-2xl sm:text-3xl my-3 font-bold">Tus canciones</h2>
        <div id="lista" class="w-full flex justify-center items-center flex-wrap bg-gray-300 p-8 rounded-b">
            {
                canciones.length != 0 ? <div class="flex justify-between items-center w-full mb-2 border-gray-100 border p-1 px-2 rounded-sm h-8">
                    <div class="w-4/12">
                        <p class="font-bold text-lg">Título</p>
                    </div>
                    <div class="w-4/12">
                        <p class="font-bold text-lg text-end sm:text-start">Álbum</p>
                    </div>
                    <div class="hidden sm:block w-4/12 max-w-32">
                        <p class="font-bold text-lg text-center">Acciones</p>
                    </div>
                </div> : ""
            }
            {
                canciones.map((cancion) => {
                    return <div id={cancion.Audios.idAudio} class="flex justify-center sm:justify-between flex-wrap items-center w-full mb-2 border-gray-100 border p-1 px-2 rounded-sm">
                                <div class="w-6/12 sm:w-4/12">
                                    <p class="w-full text-sm sm:text-base" id="nombreAudio">{cancion.Audios.nombreAudio}</p>
                                </div>
                                <div class="w-6/12 sm:w-4/12">
                                    <p class="w-full text-sm sm:text-base text-end sm:text-start" id="nombreAlbum">{cancion.Album.nombreAlbum}</p>
                                </div>
                                <div class="flex items-center h-8 mt-2 sm:mt-0 w-full sm:w-4/12 max-w-32 justify-evenly sm:justify-between">
                                    <button id="ver" data-idaudio={cancion.Audios.idAudio} class="bg-green-600 p-1 rounded-md text-gray-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                                        </svg>
                                    </button>
                                    <button id="editar" data-idaudio={cancion.Audios.idAudio} class="bg-orange-600 p-1 rounded-md text-gray-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
                                        </svg>
                                    </button>
                                    <button type="button" data-modal-target="modalBorrado" data-modal-toggle="modalBorrado" id="abrirModalBorrar" data-idaudio={cancion.Audios.idAudio} class="bg-red-600 p-1 rounded-md text-gray-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                })
            }
            {
                canciones.length == 0 ? <div><p class="text-lg">Aún no has añadido ninguna canción. ¿A qué esperas para hacerlo?</p></div> : ""
            }

            <ModalBorradoAudio/>
            <ModalEditarAudio/>
        </div>
    </div>
</div>

<script is:inline>
    document.getElementById("lista").addEventListener("click", (e) => {
        const element = e.target.closest("#ver, #editar, #abrirModalBorrar")

        if(!element || element.id != "ver" && element.id != "editar" && element.id != "abrirModalBorrar")
            return false

        switch(element.id)
        {
            case "ver":
                verCancion(element)
                break;
            case "editar":
                abrirModalEditar(element)
                break;
            case "abrirModalBorrar":
                abrirModalBorrar(element)
                break;
        }
            
    })
    
    function verCancion(element) {
        console.log("ver");
    }

    function abrirModalBorrar(element) {
        document.getElementById("ventanaModalBorrar").classList.remove("hidden")
        document.getElementById("botonBorrar").dataset.idaudio = element.dataset.idaudio
        console.log("Abrir ventana modal");
    }

    async function abrirModalEditar(element) {
        document.getElementById("botonGuardar").dataset.idaudio = element.dataset.idaudio

        console.log("Abrir ventana modal");

        const idAudio = element.dataset.idaudio
        console.log("Se editará el audio" + idAudio);

        const info = await fetch('api/audios/getInfoAudio?idAudio='+idAudio)
            .then(
                res => res.json()
            ).then(
                json => {
                    return json
                }
            )

        document.getElementById("nuevoNombreAudio").value = info[0].Audios.nombreAudio
        document.getElementById("nuevoAutoresSecundarios").value = info[0].Audios.autores_secundarios
        document.getElementById("nuevoGenero").value = info[0].Audios.genero
        document.getElementById("nuevoTipo").value = info[0].Audios.tipo
        document.getElementById("nuevoAlbum").value = info[0].Album_Audio.idAlbum
        document.getElementById("rutaAudio").innerText = info[0].Audios.archivoSonidoOriginal
        document.getElementById("portadaAudio").src = info[0].Audios.rutaImagen
        document.getElementById("nuevaDescripcion").value = info[0].Audios.descripcion
        document.getElementById("nuevoEsSencillo").checked = info[1] ? true : false
        document.getElementById("nuevoAlbumSencillo").value = info[1] ? info[1].Album.idAlbum : ""

        document.getElementById("ventanaModalEditar").classList.remove("hidden")
    }

</script>