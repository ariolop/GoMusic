---
import AvisoGuardarPerfil from '../Alerts/AvisoGuardarPerfil.astro'
import AvisoActualizarDatos from '../Alerts/AvisoActualizarDatos.astro'

interface Props {
    infoUser: object
}

const url = Astro.request.url.split("?")[1]

const { infoUser } = Astro.props
---

<div id="general" class="w-full h-full flex bg-[#ffeed3] rounded shadow-[#DBAC63] shadow-lg p-4 transition-all absolute z-10">
    <div class="w-1/2">
        <h3 class="font-bold text-xl mb-2">Datos perfil</h3>
        <div class="flex items-end">
            <img id="imagenPerfil" src={infoUser["imagenPerfil"]} class="w-28 h-28 mr-4">
            <form id="formUpdateImage" method="POST" enctype="multipart/form-data">
                <label class="cursor-pointer" for="file_image">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
                    </svg>                  
                </label>
                <span class="text-red-500 text-xs w-full block" id="mensajeImagen"></span>
                <input class="hidden" name="file_image" id="file_image" type="file">
                <input class="bg-[#DBAC63] p-1 px-2 rounded-md text-white font-semibold cursor-pointer mt-2" type="submit" value="Guardar">
            </form>
        </div>
    </div>

    <div class="w-1/2">
        <h3 class="font-bold text-xl mb-4">Datos personales</h3>
        <form id="formUpdateUser" method="POST" class="flex flex-wrap flex-row-reverse justify-between">
            <label class="w-full font-semibold">Username</label>
            <input class="w-full mb-2 rounded-md p-1" data-original={infoUser["username"]} type="text"  name="username" id="username" placeholder="Nombre de usuario" value={infoUser["username"]} required>
            <label class="w-[49%] font-semibold">Apellidos</label><label class="w-[49%] font-semibold">Nombre</label>
            <input class="w-[49%] mb-2 rounded-md p-1" data-original={infoUser["apellidos"]} type="text" name="apellidos" id="apellidos" placeholder="Apellidos" value={infoUser["apellidos"]}>
            <input class="w-[49%] mb-2 rounded-md p-1" data-original={infoUser["nombre"]} type="text" name="nombre" id="nombre" placeholder="Nombre" value={infoUser["nombre"]}  required>
            <label class="w-full font-semibold">Email</label>
            <input class="w-full mb-2 rounded-md p-1" data-original={infoUser["email"]} type="email" name="email" id="email" placeholder="Email" value={infoUser["email"]}  required>
            <span class="text-red-500 text-xs w-full block" id="mensajeDatos"></span>
            <input class="bg-[#DBAC63] p-1 px-2 rounded-md text-white font-semibold cursor-pointer mt-2" type="submit" value="Actualizar">
        </form>
    </div>
    {
        url && url.includes("guardado=correcto") ? <AvisoGuardarPerfil/> : ""
    }
    {
        url && url.includes("actualizacion=correcto") ? <AvisoActualizarDatos/> : ""
    }
</div>

<script is:inline>
    function comprobarCambios() {
        const originalValueUsername = document.getElementById("username").dataset.original
        const newValueUsername = document.getElementById("username").value
        const originalValueNombre = document.getElementById("nombre").dataset.original
        const newValueNombre = document.getElementById("nombre").value
        const originalValueApellidos = document.getElementById("apellidos").dataset.original
        const newValueApellidos = document.getElementById("apellidos").value
        const originalValueEmail = document.getElementById("email").dataset.original
        const newValueEmail = document.getElementById("email").value

        if (originalValueUsername == newValueUsername &&
            originalValueNombre   == newValueNombre &&
            originalValueApellidos == newValueApellidos &&
            originalValueEmail == newValueEmail
        ) {
            document.getElementById("mensajeDatos").innerText = ""
            return false
        }
        else {
            document.getElementById("mensajeDatos").innerText = "Cambios pendientes de actualizar"
            return true
        }
    }

    document.getElementById("username").addEventListener("input", _ => {
        comprobarCambios()
    })

    document.getElementById("nombre").addEventListener("input", _ => {
        comprobarCambios()
    })

    document.getElementById("apellidos").addEventListener("input", _ => {
        comprobarCambios()
    })

    document.getElementById("email").addEventListener("input", _ => {
        comprobarCambios()
    })

    document.getElementById("file_image").addEventListener("input", _ => {
        //Modificar el preview de la imagen para que el usuario la pueda ver.
        //No se guardan los cambios hasta que no pulsa Guardar
        const nombreArchivo = document.getElementById("file_image").files[0]

        document.getElementById("imagenPerfil").src = URL.createObjectURL(nombreArchivo)
        document.getElementById("mensajeImagen").innerText = "Cambios pendientes de guardar"
    })

    document.getElementById("formUpdateUser").addEventListener("submit", async (e) => {
        e.preventDefault()
        
        if (comprobarCambios())
        {
            const inputUsername = document.getElementById("username")
            const inputNombre = document.getElementById("nombre")
            const inputApellidos = document.getElementById("apellidos")
            const inputEmail = document.getElementById("email")


            const body = new FormData()
            body.append('username', inputUsername.value)
            body.append('nombre', inputNombre.value)
            body.append('apellidos', inputApellidos.value)
            body.append('email', inputEmail.value)

            await fetch('api/updateUser', {
                body,
                method: 'POST'
            }).then(
                _ => window.location.replace(location.href.split('?')[0] + "?actualizacion=correcto")
            ).catch(
                error => console.error('Hay problemas con el fetch', error)
            );
        }
    })

    document.getElementById("formUpdateImage").addEventListener("submit", async (e) => {
        e.preventDefault()

        console.log("Cambiamos la imagen");
        const inputImage = document.getElementById("file_image")

        if(inputImage.files.length != 0)
        {
            const body = new FormData()
            body.append('file_image', inputImage.files[0])

            const res = await fetch('/api/updateUserImage', {
                body,
                method: 'POST'
            }).then(
                res => window.location.replace(location.href.split('?')[0] + "?guardado=correcto")
            ).catch(
                error => console.error('There was a problem with the fetch operation:', error)
            );
        }
    })
</script>